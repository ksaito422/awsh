// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package mock_endpoints is a generated GoMock package.
package mock_endpoints

import (
	endpoints "awsh/internal/endpoints"
	reflect "reflect"

	aws "github.com/aws/aws-sdk-go-v2/aws"
	gomock "github.com/golang/mock/gomock"
)

// MockAppController is a mock of AppController interface.
type MockAppController struct {
	ctrl     *gomock.Controller
	recorder *MockAppControllerMockRecorder
}

// MockAppControllerMockRecorder is the mock recorder for MockAppController.
type MockAppControllerMockRecorder struct {
	mock *MockAppController
}

// NewMockAppController creates a new mock instance.
func NewMockAppController(ctrl *gomock.Controller) *MockAppController {
	mock := &MockAppController{ctrl: ctrl}
	mock.recorder = &MockAppControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAppController) EXPECT() *MockAppControllerMockRecorder {
	return m.recorder
}

// Controller mocks base method.
func (m *MockAppController) Controller(arg0 aws.Config, arg1 endpoints.Operation) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Controller", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Controller indicates an expected call of Controller.
func (mr *MockAppControllerMockRecorder) Controller(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Controller", reflect.TypeOf((*MockAppController)(nil).Controller), arg0, arg1)
}

// Operation mocks base method.
func (m *MockAppController) Operation() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Operation")
	ret0, _ := ret[0].(string)
	return ret0
}

// Operation indicates an expected call of Operation.
func (mr *MockAppControllerMockRecorder) Operation() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Operation", reflect.TypeOf((*MockAppController)(nil).Operation))
}
