// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package mock_s3 is a generated GoMock package.
package mock_s3

import (
	reflect "reflect"

	aws "github.com/aws/aws-sdk-go-v2/aws"
	gomock "github.com/golang/mock/gomock"
)

// MockS3Servicer is a mock of S3Servicer interface.
type MockS3Servicer struct {
	ctrl     *gomock.Controller
	recorder *MockS3ServicerMockRecorder
}

// MockS3ServicerMockRecorder is the mock recorder for MockS3Servicer.
type MockS3ServicerMockRecorder struct {
	mock *MockS3Servicer
}

// NewMockS3Servicer creates a new mock instance.
func NewMockS3Servicer(ctrl *gomock.Controller) *MockS3Servicer {
	mock := &MockS3Servicer{ctrl: ctrl}
	mock.recorder = &MockS3ServicerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockS3Servicer) EXPECT() *MockS3ServicerMockRecorder {
	return m.recorder
}

// DownloadObject mocks base method.
func (m *MockS3Servicer) DownloadObject(arg0 aws.Config) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DownloadObject", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DownloadObject indicates an expected call of DownloadObject.
func (mr *MockS3ServicerMockRecorder) DownloadObject(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DownloadObject", reflect.TypeOf((*MockS3Servicer)(nil).DownloadObject), arg0)
}

// ListBuckets mocks base method.
func (m *MockS3Servicer) ListBuckets(arg0 aws.Config) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListBuckets", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListBuckets indicates an expected call of ListBuckets.
func (mr *MockS3ServicerMockRecorder) ListBuckets(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListBuckets", reflect.TypeOf((*MockS3Servicer)(nil).ListBuckets), arg0)
}

// ListObjects mocks base method.
func (m *MockS3Servicer) ListObjects(arg0 aws.Config) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListObjects", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListObjects indicates an expected call of ListObjects.
func (mr *MockS3ServicerMockRecorder) ListObjects(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListObjects", reflect.TypeOf((*MockS3Servicer)(nil).ListObjects), arg0)
}
